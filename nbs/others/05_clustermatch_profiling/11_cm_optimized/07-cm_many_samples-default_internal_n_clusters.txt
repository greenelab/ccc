         2657 function calls (2651 primitive calls) in 3.985 seconds

   Ordered by: cumulative time
   List reduced from 133 to 50 due to restriction <50>

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        1    0.000    0.000    3.985    3.985 {built-in method builtins.exec}
        1    0.000    0.000    3.985    3.985 <string>:1(<module>)
        1    0.000    0.000    3.985    3.985 1750096170.py:1(func)
        1    0.001    0.001    3.985    3.985 coef.py:225(cm)
       57    0.000    0.000    3.981    0.070 _base.py:601(result_iterator)
       95    0.000    0.000    3.981    0.042 threading.py:280(wait)
       55    0.000    0.000    3.981    0.072 _base.py:417(result)
      289    3.980    0.014    3.980    0.014 {method 'acquire' of '_thread.lock' objects}
        2    0.000    0.000    0.002    0.001 _base.py:572(map)
        2    0.000    0.000    0.002    0.001 _base.py:597(<listcomp>)
       55    0.000    0.000    0.002    0.000 thread.py:155(submit)
       55    0.000    0.000    0.001    0.000 thread.py:174(_adjust_thread_count)
        3    0.000    0.000    0.001    0.000 threading.py:873(start)
        3    0.000    0.000    0.000    0.000 threading.py:556(wait)
       55    0.000    0.000    0.000    0.000 threading.py:404(acquire)
        2    0.000    0.000    0.000    0.000 {built-in method numpy.zeros}
        1    0.000    0.000    0.000    0.000 _base.py:635(__exit__)
        1    0.000    0.000    0.000    0.000 typedlist.py:228(__init__)
        1    0.000    0.000    0.000    0.000 thread.py:210(shutdown)
       55    0.000    0.000    0.000    0.000 _base.py:317(__init__)
        9    0.000    0.000    0.000    0.000 typedlist.py:341(append)
        3    0.000    0.000    0.000    0.000 threading.py:1021(join)
        3    0.000    0.000    0.000    0.000 threading.py:1059(_wait_for_tstate_lock)
       59    0.000    0.000    0.000    0.000 threading.py:228(__init__)
        1    0.000    0.000    0.000    0.000 typedlist.py:298(_initialise_list)
      113    0.000    0.000    0.000    0.000 threading.py:256(__enter__)
      113    0.000    0.000    0.000    0.000 threading.py:259(__exit__)
       47    0.000    0.000    0.000    0.000 {method '_acquire_restore' of '_thread.RLock' objects}
        3    0.000    0.000    0.000    0.000 threading.py:795(__init__)
        3    0.000    0.000    0.000    0.000 {built-in method _thread.start_new_thread}
        2    0.000    0.000    0.000    0.000 typeof.py:25(typeof)
        2    0.000    0.000    0.000    0.000 abstract.py:60(__call__)
        2    0.000    0.000    0.000    0.000 functools.py:872(wrapper)
        1    0.000    0.000    0.000    0.000 numeric.py:289(full)
        1    0.000    0.000    0.000    0.000 typedlist.py:270(_parse_arg)
       48    0.000    0.000    0.000    0.000 threading.py:268(_acquire_restore)
       55    0.000    0.000    0.000    0.000 thread.py:41(__init__)
       55    0.000    0.000    0.000    0.000 {method '__enter__' of '_thread.RLock' objects}
       47    0.000    0.000    0.000    0.000 {method '_release_save' of '_thread.RLock' objects}
        1    0.000    0.000    0.000    0.000 dispatcher.py:677(typeof_pyval)
       48    0.000    0.000    0.000    0.000 threading.py:271(_is_owned)
      100    0.000    0.000    0.000    0.000 {built-in method _thread.allocate_lock}
        2    0.000    0.000    0.000    0.000 abstract.py:48(_intern)
       48    0.000    0.000    0.000    0.000 threading.py:265(_release_save)
        2    0.000    0.000    0.000    0.000 {method 'get' of 'dict' objects}
        3    0.000    0.000    0.000    0.000 threading.py:985(_stop)
       55    0.000    0.000    0.000    0.000 _base.py:387(__get_result)
        1    0.000    0.000    0.000    0.000 <__array_function__ internals>:2(copyto)
        2    0.000    0.000    0.000    0.000 functools.py:816(dispatch)
      172    0.000    0.000    0.000    0.000 {method '__exit__' of '_thread.lock' objects}