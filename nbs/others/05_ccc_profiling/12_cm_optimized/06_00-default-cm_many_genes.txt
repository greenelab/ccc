         226019 function calls (226013 primitive calls) in 21.329 seconds

   Ordered by: cumulative time
   List reduced from 138 to 50 due to restriction <50>

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        1    0.000    0.000   21.329   21.329 {built-in method builtins.exec}
        1    0.000    0.000   21.329   21.329 <string>:1(<module>)
        1    0.000    0.000   21.329   21.329 1375007101.py:1(func)
        1    0.023    0.023   21.328   21.328 impl.py:367(ccc)
     5052    0.009    0.000   21.271    0.004 _base.py:602(result_iterator)
     5050    0.014    0.000   21.262    0.004 _base.py:418(result)
    10001    0.015    0.000   21.251    0.002 threading.py:280(wait)
    29905   21.226    0.001   21.226    0.001 {method 'acquire' of '_thread.lock' objects}
        2    0.000    0.000    0.033    0.017 _base.py:573(map)
        2    0.001    0.001    0.033    0.017 _base.py:598(<listcomp>)
     5050    0.005    0.000    0.032    0.000 thread.py:161(submit)
     5050    0.002    0.000    0.019    0.000 thread.py:180(_adjust_thread_count)
     5050    0.004    0.000    0.017    0.000 threading.py:404(acquire)
     5050    0.002    0.000    0.007    0.000 _base.py:318(__init__)
    10101    0.004    0.000    0.005    0.000 threading.py:256(__enter__)
     5052    0.004    0.000    0.005    0.000 threading.py:228(__init__)
    10101    0.003    0.000    0.004    0.000 threading.py:259(__exit__)
     5050    0.004    0.000    0.004    0.000 {method '_acquire_restore' of '_thread.RLock' objects}
    10004    0.001    0.000    0.001    0.000 {built-in method _thread.allocate_lock}
     5050    0.001    0.000    0.001    0.000 {method '_release_save' of '_thread.RLock' objects}
     5050    0.001    0.000    0.001    0.000 _base.py:388(__get_result)
     5050    0.001    0.000    0.001    0.000 {method '__enter__' of '_thread.RLock' objects}
     4951    0.001    0.000    0.001    0.000 threading.py:271(_is_owned)
     4951    0.001    0.000    0.001    0.000 threading.py:265(_release_save)
     5050    0.001    0.000    0.001    0.000 threading.py:82(RLock)
     5051    0.001    0.000    0.001    0.000 {method '__exit__' of '_thread.RLock' objects}
    10001    0.001    0.000    0.001    0.000 {method 'append' of 'collections.deque' objects}
     5050    0.001    0.000    0.001    0.000 {method 'pop' of 'list' objects}
     4951    0.001    0.000    0.001    0.000 threading.py:268(_acquire_restore)
     5050    0.001    0.000    0.001    0.000 thread.py:47(__init__)
    15153    0.001    0.000    0.001    0.000 {method '__exit__' of '_thread.lock' objects}
     5050    0.001    0.000    0.001    0.000 {method '_is_owned' of '_thread.RLock' objects}
     9900    0.001    0.000    0.001    0.000 {built-in method time.monotonic}
     5051    0.000    0.000    0.000    0.000 {method 'put' of '_queue.SimpleQueue' objects}
     5051    0.000    0.000    0.000    0.000 {method '__enter__' of '_thread.lock' objects}
     4950    0.000    0.000    0.000    0.000 {method 'remove' of 'collections.deque' objects}
     4952    0.000    0.000    0.000    0.000 {method 'release' of '_thread.lock' objects}
     4951    0.000    0.000    0.000    0.000 {built-in method builtins.len}
        1    0.000    0.000    0.000    0.000 {method 'seed' of 'numpy.random.mtrand.RandomState' objects}
        1    0.000    0.000    0.000    0.000 _base.py:636(__exit__)
        1    0.000    0.000    0.000    0.000 thread.py:216(shutdown)
        2    0.000    0.000    0.000    0.000 {built-in method numpy.zeros}
        9    0.000    0.000    0.000    0.000 typedlist.py:341(append)
        1    0.000    0.000    0.000    0.000 threading.py:873(start)
        1    0.000    0.000    0.000    0.000 threading.py:1021(join)
        1    0.000    0.000    0.000    0.000 threading.py:1059(_wait_for_tstate_lock)
        1    0.000    0.000    0.000    0.000 typedlist.py:298(_initialise_list)
        1    0.000    0.000    0.000    0.000 threading.py:556(wait)
        1    0.000    0.000    0.000    0.000 impl.py:75(get_range_n_clusters)
        1    0.000    0.000    0.000    0.000 random.py:791(getrandbits)