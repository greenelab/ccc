"""
Contains general functions related to cluster analysis.
"""
import json

import numpy as np
import pandas as pd
from tqdm import tqdm
from sklearn.base import clone


def generate_ensemble(data, clusterers: dict, tqdm_args=None):
    """
    It generates an ensemble from the data given a set of clusterers (a
    clusterer is an instance of a clustering algorithm with a fixed set of
    parameters).

    Args:
        data:
            A numpy array, pandas dataframe, or any other structure supported
            by the clusterers as data input.
        clusterers:
            A dictionary with clusterers specified in this format: { 'k-means
            #1': KMeans(n_clusters=2), ... }. Estimators are cloned before
            fitted to avoid modifications of the objects given as parameters.
        tqdm_args:
            Extra argument passed to tqdm.

    Returns:
        A pandas DataFrame with all the partitions generated by the clusterers.
        Columns include the clusterer name/id, the partition, and the estimator
        parameters (obtained with the get_params() method). An "n_clusters"
        column is also added with the real number of clusters (which in some
        cases might differ from the estimator parameters).
    """
    if tqdm_args is None:
        tqdm_args = {}

    ensemble = []

    for clus_name, clus_obj in tqdm(
        clusterers.items(), total=len(clusterers), **tqdm_args
    ):
        # work on a clone of the given estimator
        clus_obj = clone(clus_obj)

        # fit estimator and get partition of data
        partition = clus_obj.fit_predict(data)

        # get number of clusters
        n_clusters = np.unique(partition).shape[0]

        res = pd.Series(
            {
                "id": clus_name,
                "params": json.dumps(clus_obj.get_params()),
                "partition": partition,
            }
        )

        # add real number of clusters
        res["n_clusters"] = n_clusters

        ensemble.append(res)

    return pd.DataFrame(ensemble).set_index("id")
